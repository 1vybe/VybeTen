/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2014 Google Inc.
 */

//
//  GTLQueryVybe.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   vybe/v1.0
// Description:
//   Media API
// Classes:
//   GTLQueryVybe (13 custom class methods, 4 custom properties)

#import "GTLQueryVybe.h"

#import "GTLVybeMediaMediaListResponse.h"
#import "GTLVybeMediaMediaQuery.h"
#import "GTLVybeMediaMediaUploadRequest.h"
#import "GTLVybeMediaTribeCreateRequest.h"
#import "GTLVybeMediaTribesListResponse.h"
#import "GTLVybeMediaUsersListResponse.h"

@implementation GTLQueryVybe

@dynamic fields, tribeId, userId, vybeId;

+ (NSDictionary *)parameterNameMap {
  NSDictionary *map =
    [NSDictionary dictionaryWithObjectsAndKeys:
      @"tribe_id", @"tribeId",
      @"user_id", @"userId",
      @"vybe_id", @"vybeId",
      nil];
  return map;
}

#pragma mark -
#pragma mark "media" methods
// These create a GTLQueryVybe object.

+ (id)queryForMediaDeleteWithVybeId:(NSString *)vybeId {
  NSString *methodName = @"vybe.media.delete";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.vybeId = vybeId;
  return query;
}

+ (id)queryForMediaListAll {
  NSString *methodName = @"vybe.media.list_all";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLVybeMediaMediaListResponse class];
  return query;
}

+ (id)queryForMediaSearchWithObject:(GTLVybeMediaMediaQuery *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"vybe.media.search";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLVybeMediaMediaListResponse class];
  return query;
}

+ (id)queryForMediaUploadWithObject:(GTLVybeMediaMediaUploadRequest *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"vybe.media.upload";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  return query;
}

#pragma mark -
#pragma mark "tribes" methods
// These create a GTLQueryVybe object.

+ (id)queryForTribesCreateWithObject:(GTLVybeMediaTribeCreateRequest *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"vybe.tribes.create";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  return query;
}

+ (id)queryForTribesGetMediaWithTribeId:(NSString *)tribeId {
  NSString *methodName = @"vybe.tribes.get_media";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.tribeId = tribeId;
  query.expectedObjectClass = [GTLVybeMediaMediaListResponse class];
  return query;
}

+ (id)queryForTribesGetUsersWithTribeId:(NSString *)tribeId {
  NSString *methodName = @"vybe.tribes.get_users";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.tribeId = tribeId;
  query.expectedObjectClass = [GTLVybeMediaUsersListResponse class];
  return query;
}

+ (id)queryForTribesListAll {
  NSString *methodName = @"vybe.tribes.list_all";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLVybeMediaMediaListResponse class];
  return query;
}

+ (id)queryForTribesUpdateFollowersWithTribeId:(NSString *)tribeId {
  NSString *methodName = @"vybe.tribes.update_followers";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.tribeId = tribeId;
  query.expectedObjectClass = [GTLVybeMediaUsersListResponse class];
  return query;
}

#pragma mark -
#pragma mark "users" methods
// These create a GTLQueryVybe object.

+ (id)queryForUsersCreateWithObject:(GTLVybeMediaTribeCreateRequest *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"vybe.users.create";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  return query;
}

+ (id)queryForUsersFollowingWithUserId:(NSString *)userId {
  NSString *methodName = @"vybe.users.following";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.userId = userId;
  query.expectedObjectClass = [GTLVybeMediaUsersListResponse class];
  return query;
}

+ (id)queryForUsersMediaWithUserId:(NSString *)userId {
  NSString *methodName = @"vybe.users.media";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.userId = userId;
  query.expectedObjectClass = [GTLVybeMediaMediaListResponse class];
  return query;
}

+ (id)queryForUsersTribesWithUserId:(NSString *)userId {
  NSString *methodName = @"vybe.users.tribes";
  GTLQueryVybe *query = [self queryWithMethodName:methodName];
  query.userId = userId;
  query.expectedObjectClass = [GTLVybeMediaTribesListResponse class];
  return query;
}

@end
